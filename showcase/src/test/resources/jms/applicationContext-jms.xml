<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">
  <context:component-scan base-package="org.lanqiao.showcase.jms"/>

  <!--配置connection-factory，指定连接rabbit server参数 -->
  <rabbit:connection-factory id="connectionFactory"
                             username="guest" password="guest"
                             host="10.100.40.185" port="5672"/>

  <!--定义rabbit template用于数据的接收和发送 -->
  <rabbit:template id="amqpTemplate" connection-factory="connectionFactory" />

  <!--通过指定下面的admin信息，当前proceducer中的exchange和queue会在rabbitmq服务器上自动生成 -->
  <!--实测无效-->
  <!--<rabbit:admin connection-factory="connectionFactory"/>-->

  <!--定义消息队列 -->
  <rabbit:queue id="emailSendQueue" name="emailSendQueue" />

  <!-- 定义direct exchange，理解为交换机，此为直接传输方式：Exchange会将消息发送完全匹配ROUTING_KEY的Queue -->
  <rabbit:direct-exchange name="emailDirectExchange" auto-delete="false">
    <rabbit:bindings>
      <rabbit:binding queue="emailSendQueue" key="emailSendKey" />
    </rabbit:bindings>
  </rabbit:direct-exchange>
<!--Exchange有4种类型：direct(默认)，fanout, topic, 和headers，不同类型的Exchange转发消息的策略有所区别：
Direct
直接交换器，工作方式类似于单播，Exchange会将消息发送完全匹配ROUTING_KEY的Queue
fanout
广播是式交换器，不管消息的ROUTING_KEY设置为什么，Exchange都会将消息转发给所有绑定的Queue。
topic
主题交换器，工作方式类似于组播，Exchange会将消息转发和ROUTING_KEY匹配模式相同的所有队列，比如，ROUTING_KEY为user.stock的Message会转发给绑定匹配模式为 * .stock,user.stock， * . * 和#.user.stock.#的队列。（ * 表是匹配一个任意词组，#表示匹配0个或多个词组）
headers
消息体的header匹配（ignore）-->

  <bean id="msgSender" class="org.lanqiao.showcase.jms.EmailSendingRequestProducer"/>
</beans>
